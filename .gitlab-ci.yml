# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/php
image: php:7.4
#
## Pick zero or more services to be used on all builds.
## Only needed when using a docker container to run your tests in.
## Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
#services:
##  - postgres:latest

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
  - vendor/

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
  # Update packages
  - apt-get update -yqq

  # Install dependencies
  - apt-get install git nodejs libonig-dev libcurl4-gnutls-dev libicu-dev libmcrypt-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libpq-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libzip-dev -yqq

  - apt-get install -y gettext

  # Install php extensions
  - docker-php-ext-install mbstring pdo pdo_mysql curl json intl gd xml zip bz2 opcache

  # Install & enable Xdebug for code coverage reports
  - pecl install xdebug
  - docker-php-ext-enable xdebug

  - apt-get update
  - apt-get install zip unzip
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php composer-setup.php
  - php -r "unlink('composer-setup.php');"
  - php composer.phar install

codestyle:
  script:
    - ./vendor/bin/phpcs src
    - ./vendor/bin/phpcs tests

static_code_analytics_psalm:
  script:
    - ./vendor/bin/psalm

static_code_analytics_phpstan:
  script:
    - ./vendor/bin/phpstan analyse src

unit_tests_sqlite:
  variables:
    DB_DRIVER: sqlite
    DB_HOST: ''
    DB_USER: ''
    DB_NAME: ''
    DB_PORT: ''
    DB_PASSWORD: ''
    DB_PATH: ':memory:'
    DB_CHARSET: ''
    XDEBUG_MODE: coverage
  script:
    - cp .env.example .env
    - envsubst < ".env.example" > ".env"
    - php ./vendor/bin/phpunit tests -c phpunit.xml --coverage-text --colors=never --testdox -d memory_limit=1024M
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - .env
    expire_in: 1 days
    when: always

unit_tests_mysql:
  variables:
    MYSQL_ROOT_PASSWORD: secret
    MYSQL_USER: mysql_user
    MYSQL_PASSWORD: mysql_password
    MYSQL_DATABASE: mysql_db
    #  MYSQL_HOST: localhost
    DB_DRIVER: mysql
    DB_HOST: mysql
    DB_USER: mysql_user
    DB_NAME: mysql_db
    DB_PORT: 3306
    DB_PASSWORD: mysql_password
    DB_PATH: ''
    DB_CHARSET: utf8mb4
    XDEBUG_MODE: coverage
  services:
    - mysql:latest
  script:
    - cp .env.example .env
    - envsubst < ".env.example" > ".env"
    - php ./vendor/bin/phpunit tests -c phpunit.xml --coverage-text --colors=never --testdox -d memory_limit=1024M
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - .env
    expire_in: 1 days
    when: always



#memory_leaks:
#  script:
#    - ./vendor/bin/roave-no-leaks
